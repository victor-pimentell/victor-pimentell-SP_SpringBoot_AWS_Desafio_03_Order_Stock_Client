openapi: 3.0.1
info:
  title: REST API - Stock Microservice
  description: Microservice intended for stock management
  version: v1
servers:
  - url: http://localhost:8082
    description: Generated server url
tags:
  - name: Stock
    description: Contains all operations related to the Stock resource
paths:
  /api/v1/stock/products:
    get:
      tags:
        - Stock
      summary: Get all products in pages
      description: Retrieve all product details in pages. The page and it's size can be chosen.
      operationId: getAllProducts
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 12
      responses:
        '200':
          description: Products returned successfully
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponseDto'
    put:
      tags:
        - Stock
      summary: Update products quantities
      description: Resource to update an existing products quantities.
      operationId: updateProductsQuantities
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Product'
        required: true
      responses:
        '200':
          description: Products quantities updated successfully
          content:
            application/json;charset=UTF-8: {}
        '400':
          description: Request not processed due to missing or invalid data
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      tags:
        - Stock
      summary: Create a new product
      description: Resource to create a new product.
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateDto'
        required: true
      responses:
        '201':
          description: Product created successfully
          headers:
            Location:
              description: URL of the created resource
              style: simple
              schema:
                type: string
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ProductResponseDto'
        '400':
          description: Request not processed due to missing or invalid data
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: Product already registered
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/stock/products/quantity:
    patch:
      tags:
        - Stock
      summary: Update product's quantity
      description: Resource to update an existing product's quantity.
      operationId: updateQuantity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductQuantityDto'
        required: true
      responses:
        '200':
          description: Product's quantity updated successfully
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ProductResponseDto'
        '400':
          description: Request not processed due to missing or invalid data
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Product not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/stock/products/name:
    patch:
      tags:
        - Stock
      summary: Update product's name
      description: Resource to update an existing product's name.
      operationId: updateName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductNameDto'
        required: true
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ProductResponseDto'
        '400':
          description: Request not processed due to missing or invalid data
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Product not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v1/stock/products/{id}:
    get:
      tags:
        - Stock
      summary: Get product by ID
      description: Retrieve product details by ID.
      operationId: getProductById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Product found and returned successfully
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ProductResponseDto'
        '404':
          description: Product not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
components:
  schemas:
    ErrorMessage:
      type: object
      properties:
        path:
          type: string
        method:
          type: string
        status:
          type: integer
          format: int32
        statusText:
          type: string
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        quantity:
          type: integer
          format: int32
        hash:
          type: string
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ProductResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        quantity:
          type: integer
          format: int32
        hash:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    ProductCreateDto:
      required:
        - name
        - quantity
      type: object
      properties:
        name:
          type: string
        quantity:
          minimum: 1
          type: integer
          format: int32
    ProductQuantityDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
    ProductNameDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
